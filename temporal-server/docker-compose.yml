version: "3.5"
services:
  elasticsearch:
    container_name: temporal-elasticsearch
    environment:
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.low=512mb
      - cluster.routing.allocation.disk.watermark.high=256mb
      - cluster.routing.allocation.disk.watermark.flood_stage=128mb
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - xpack.security.enabled=false
    image: elasticsearch:${ELASTICSEARCH_VERSION}
    networks:
      - temporal-network
    expose:
      - 9200
    volumes:
      - ./data/elasticsearch/:/var/lib/elasticsearch/data
  postgresql:
    container_name: temporal-postgresql
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
    image: postgres:${POSTGRESQL_VERSION}
    networks:
      - temporal-network
    ports:
      - 5455:5432
    volumes:
      - ./data/postgresql/:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 15455:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=temporal@temporal.io
      - PGADMIN_DEFAULT_PASSWORD=temporal
    depends_on:
      - postgresql
    networks:
      - temporal-network
    volumes:
      - ./data/pgadmin/:/var/lib/pgadmin/
  temporal:
    container_name: temporal
    depends_on:
      - postgresql
      - elasticsearch
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
      - ENABLE_ES=true
      - ES_SEEDS=elasticsearch
      - ES_VERSION=v7
    image: temporalio/auto-setup:${TEMPORAL_VERSION}
    networks:
      - temporal-network
    ports:
      - 7233:7233
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
  temporal-admin-tools:
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:${TEMPORAL_VERSION}
    networks:
      - temporal-network
    stdin_open: true
    tty: true
  temporal-ui:
    container_name: temporal-ui
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
      - TEMPORAL_NOTIFY_ON_NEW_VERSION=false
    image: temporalio/ui:${TEMPORAL_UI_VERSION}
    networks:
      - temporal-network
    ports:
      - 8080:8080
  cosmosdb-emulator:
    image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator
    tty: true
    container_name: cosmosdb-emulator
    restart: always
    ports:
      - "8081:8081"  # Port for the emulator's Data Explorer
      - "10250:10250"
      - "10251:10251"  # Port for the emulator's communication with clients
      - "10252:10252"  # Port for the emulator's communication with services
      - "10253:10253"  # Port for the emulator's communication with services
      - "10254:10254"  # Port for the emulator's communication with services
    environment:
      - AZURE_COSMOS_EMULATOR_PARTITION_COUNT=2
      - AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE=true
    healthcheck:
       test: ["CMD", "curl", "-f", "-k", "https://cosmosdb-emulator:8081/_explorer/emulator.pem"]
       interval: 15s
       timeout: 15s
       retries: 15
    networks:
      - temporal-network
    volumes:
       - ./data/cosmosdb:/tmp/cosmos/appdata # linux path
       # - ./db_data:C:/CosmosDB.Emulator/bind-mount # windows path
  temporalairlinesconcept.api:  
    container_name: temporalairlinesconcept.api
    build:
      context: ./../  # Specify the path to your .NET application
      dockerfile: TemporalAirlinesConcept.Api/Dockerfile  # Replace with the actual name of your Dockerfile
    ports:
      - 5222:5050
    healthcheck:
      test: curl -f https://cosmosdb-emulator:8081/_explorer/index.html || exit 1
      interval: 15s
      timeout: 15s
      retries: 15
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5050
    depends_on:
      - cosmosdb-emulator
      - temporal
    networks:
      - temporal-network

  temporalairlinesconcept.web:
    container_name: temporalairlinesconcept.web
    build:
      context: ./../  # Specify the path to your .NET application
      dockerfile: TemporalAirlinesConcept.Web/Dockerfile  # Replace with the actual name of your Dockerfile
    ports:
      - 5223:5050
    healthcheck:
      test: curl -f https://cosmosdb-emulator:8081/_explorer/index.html || exit 1
      interval: 15s
      timeout: 15s
      retries: 15
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5050
    depends_on:
      - cosmosdb-emulator
      - temporal
    networks:
      - temporal-network

networks: 
  temporal-network:
    driver: bridge
    name: temporal-network