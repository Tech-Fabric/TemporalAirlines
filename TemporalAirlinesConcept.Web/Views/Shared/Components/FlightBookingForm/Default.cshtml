@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Humanizer
@using TemporalAirlinesConcept.DAL.Entities
@using Temporalio.Api.Update.V1

@model TemporalAirlinesConcept.Web.ViewComponents.FlightBookingFormViewModel


<form hx-post="@Url.Action("Form", "Flight")"
      id="form-flight-booking"
      autocomplete="off"
      hx-swap="outerHTML"
      class="form-flight-booking rounded-3"
      _="on htmx:beforeSend set #flight-search-submit.disabled to 'disabled'
         on htmx:afterRequest set #flight-search-submit.disabled to ''">

    <input type="hidden" asp-for="@Model.SelectedFlight" value="@Model.SelectedFlight"></input>

    <div class="flights-search-filters d-flex flex-row">
        <div class="flex-column align-items-start flex-grow-1 me-1 position-relative" role="group">
            <select class="form-select form-select-lg mb-3 rounded-start-3 rounded-end-0"
                    aria-label="Airport from"
                    asp-for="DepartureAirport">
                <option selected>From</option>

                @foreach (var a in Model.Airports)
                {
                    <option value="@a.Key">@a.Value</option>
                }
            </select>
        </div>

        <div class="flex-column align-items-start flex-grow-1 me-1 position-relative" role="group">
            <select class="form-select form-select-lg mb-3 rounded-start-0 rounded-end-0"
                    aria-label="Airport to"
                    asp-for="ArrivalAirport">
                <option selected>To</option>
                @foreach (var a in Model.Airports)
                {
                    <option value="@a.Key">@a.Value</option>
                }
            </select>
        </div>

        <div class="flex-column align-items-start flex-grow-1 me-1" role="group">
            <input type="date" class="form-control form-control-lg flex-sm-fill rounded-start-0 rounded-end-0"
                   asp-for="@Model.When"
                   placeholder="When"
                   autocomplete="false">
        </div>

        <div class="flex-column align-items-start flex-grow-1" role="group">
            @* <label class="form-label flex-sm-fill" asp-for="@Model.To"></label> *@
            <button id="flight-search-submit" class="btn btn-lg btn-primary w-100 rounded-start-0 rounded-end-3"
                    hx-post="@Url.Action("Form", "Flight", new { SelectedFlight = "" })"
                    hx-swap="outerHTML" hx-push-url="true"
                    hx-target="#form-flight-booking">
                Find!
            </button>
        </div>
    </div>

    <div class="flights">

        @if (Model.Flights.Count <= 0)
        {
            <div class="flight d-flex flex-row justify-content-between">
                <strong>No flights available :(</strong>
            </div>
        }

        @foreach (var flight in Model.Flights.Take(5))
        {
            <div class="flight d-flex flex-row justify-content-between">
                <div class="flight-details d-flex flex-column justify-content-evenly">
                    <div class="flight-departure d-flex flex-row">
                        <div class="flight-departure-label flex-grow-1">Departure:&nbsp;</div>
                        <div class="flight-departure-time flex-grow-1"><strong>@flight.Depart</strong> - <span class="flight-time-human">(@flight.Depart.Humanize())</span>&nbsp;</div>
                        <div class="flight-from flex-grow-1">
                            <strong>@flight.From</strong>
                        </div>
                    </div>

                    <div class="flight-length">
                        Flight time: @((flight.Arrival - flight.Depart).Humanize())
                    </div>

                    <div class="arrival d-flex flex-row justify-content-between">
                        <div class="flight-departure-label flex-grow-1">Arrival:&nbsp;</div>
                        <div class="flight-arrival-time flex-grow-1"><strong>@flight.Arrival</strong> - <span class="flight-time-human">(@flight.Arrival.Humanize())</span>&nbsp;</div>
                        <div class="flight-to flex-grow-1">
                            <strong>@flight.To</strong>
                        </div>
                    </div>
                </div>

                <div class="flight-price-and-select d-flex flex-column">
                    <div class="flight-price font-size-large">
                        $0.00
                    </div>
                    @if (!string.IsNullOrEmpty(Model.SelectedFlight) && Model.SelectedFlight == flight.Id)
                    {
                        <span>Selected</span>
                    }
                    else
                    {
                        <button class="btn btn-primary"
                                hx-post="@Url.Action("Form", "Flight", new { SelectedFlight = @flight.Id })"
                                hx-swap="outerHTML" hx-push-url="true"
                                hx-target="#form-flight-booking">
                            Select
                        </button>
                    }
                </div>

            </div>
        }
    </div>

    @if (!string.IsNullOrEmpty(Model.SelectedFlight))
    {
        <h2>Please select seats:</h2>

        {
            var flight = Model.Flights.First(f => f.Id == Model.SelectedFlight);

            <div class="seat-select">
                @for (var i = 0; i < 20; i++)
                {
                    <div class="seat-row d-flex flex-row justify-content-around">
                        @for (var j = 0; j < 6; j++)
                        {
                            <div class="seat">

                                @{
                                    var seatId = @flight.Seats.Keys.ElementAt(i * 6 + j);

                                    if (flight.Seats[seatId] == null)
                                    {
                                        <input type="checkbox" class="" asp-for="@Model.SelectedSeats[seatId]"></input>
                                        <div class="seat-indicator btn btn-primary">@seatId</div>
                                    }
                                    else
                                    {
                                        <div class="seat-indicator btn btn-warning" disabled>@seatId</div>
                                    }
                                }
                            </div>
                        }
                    </div>
                }
            </div>
        }

        <button class="btn btn-primary btn-lg"
                hx-post="@Url.Action("Form", "Flight")"
                hx-swap="outerHTML"
                hx-target="#form-flight-booking">Buy</button>
    }

    @await Html.PartialAsync("Forms/__FormProblemDetailsSummary")


    @Html.AntiForgeryToken()
</form>
