@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Htmx.TagHelpers
@using Humanizer
@using Microsoft.AspNetCore.Mvc.ModelBinding
@model TemporalAirlinesConcept.Web.ViewComponents.PurchaseForm.PurchaseFormViewModel

<form hx-post="@Url.Action("Form", "Purchase")"
      id="form-purchase"
      autocomplete="off"
      hx-swap="outerHTML"
      class="form-flight-booking rounded-3">

    <div class="flights flight-listing-page" style="margin-top: 0">
        <div class="flight-block bg-white light-shadow p-24 br-10 mb-16 sal-animate" data-sal="slide-down" data-sal-duration="800" data-sal-delay="100" data-sal-easing="ease-in-out">
            <div class="flight-area">
                <div class="airline-name">
                    <div>
                        <h5 class="lightest-black mb-8">United Dubai Airlines</h5>
                        <h6 class="dark-gray">Boeing 777-90</h6>
                    </div>
                </div>
                <div class="flight-detail">
                    <div class="flight-departure">
                        <h5 class="color-black">@Model.Flight.Depart.ToString("t")</h5>
                        <h5 class="dark-gray text-end">@Model.Flight.From</h5>
                    </div>
                    <div class="d-inline-flex align-items-center gap-8">

                        <div class="from-to text-center">
                            <h5 class="dark-gray">@((Model.Flight.Arrival - Model.Flight.Depart).Humanize())</h5>
                            <img src="/img/route-plan.png" alt="">
                            <h6 class="color-black">1 Stop</h6>
                        </div>
                    </div>
                    <div class="flight-departure">
                        <h5 class="color-black">@Model.Flight.Arrival.ToString("t")</h5>
                        <h5 class="dark-gray">@Model.Flight.To</h5>
                    </div>
                </div>
                <div class="flight-button">
                    <div class="amount">
                        <h5 class="color-black">$240</h5>
                        <h6 class="dark-gray text-end">Price</h6>
                    </div>
                </div>
            </div>
            <hr class="bg-light-gray mt-24 mb-24">
            <div class="d-flex justify-content-center align-items-center">
                <h5 class="color-black">@Model.Flight.Depart.Date.ToString("m")</h5>
            </div>
        </div>
    </div>

    <div class="seats text-start">
        @if (!Model.IsPaymentEmulated)
        {
            <hr class="mb-4">
            <h4 class="mb-5">Please select seats:</h4>
            
            var flight = Model.Flight;

            <div class="seat-select">
                @for (var i = 0; i < 20; i++)
                {
                    <div class="seat-row d-flex flex-row justify-content-around">
                        @for (var j = 0; j < 6; j++)
                        {
                            <div class="seat">

                                @{
                                    var seat = flight.Seats.ElementAt(i * 6 + j);

                                    if (!Model.SelectedSeats.ContainsKey(seat.Name))
                                    {
                                        Model.SelectedSeats.Add(seat.Name, false);
                                    }

                                    if (string.IsNullOrEmpty(seat.TicketId))
                                    {
                                        <input type="checkbox" class="" asp-for="@Model.SelectedSeats[seat.Name]">
                                        <div class="seat-indicator btn btn-primary">@seat.Name</div>
                                    }
                                    else
                                    {
                                        <div class="seat-indicator btn btn-warning" disabled>@seat.Name</div>
                                    }
                                }
                            </div>
                        }
                    </div>
                }
            </div>

            if(ViewContext.ViewData.ModelState.ValidationState == ModelValidationState.Invalid &&
                ViewContext.ViewData.ModelState[nameof(Model.NumberOfTickets)].Errors.Count > 0)
            {
                <div class="alert alert-danger mt-5">
                    <span asp-validation-for="@Model.NumberOfTickets"></span>
                </div>
            }
        }

        <div class="text-end">
            @if (!Model.IsPaymentEmulated)
            {
                @if (Model.IsConfirmed)
                {
                    <button class="btn btn-success btn-lg mt-3 flight-select-action"
                            hx-post="/purchase/@Model.PurchaseId/payment"
                            hx-swap="outerHTML"
                            hx-push-url="false"
                            hx-target="#form-purchase">
                        Emulate payment
                    </button>
                }
                else
                {
                    <button class="btn btn-success btn-lg mt-3 flight-select-action"
                            hx-post="/purchase/@Model.PurchaseId/confirm"
                            hx-swap="outerHTML"
                            hx-push-url="false"
                            hx-target="#form-purchase">
                        Confirm seat selection
                    </button>
                }
            }
        </div>

        <hr class="mb-4 mt-4">

        @if (Model.Tickets.Any())
        {
            <div class="d-flex justify-content-between align-items-center">
                <h4>Tickets details:</h4>

                <button class="btn btn-success btn-lg flight-select-action"
                        hx-get="/purchase/@Model.PurchaseId/tickets"
                        hx-swap="outerHTML"
                        hx-push-url="false"
                        hx-target="#form-purchase">
                    Update tickets
                </button>
            </div>

            @foreach (var ticket in Model.Tickets)
            {
                <div>
                    <p>Ticket ID: @ticket.Id</p>

                    <p>Status: @ticket.PaymentStatus.ToString()</p>

                    @if (ticket.Seat != null)
                    {
                        <p>Seat: @ticket.Seat.Name</p>
                    }
                    else
                    {
                        <p>No seat selected</p>
                    }

                    @if (ticket.Passenger != null)
                    {
                        <p>Seat: @ticket.Passenger</p>
                    }
                    else
                    {
                        <p>No passenger assigned</p>
                    }

                    <img src="data:image/png;base64,@ticket.Code" style="height: 275px;" alt="Ticket Code">

                    <hr class="mt-2">
                </div>
            }
        }
        else
        {
            <div class="text-end">
                <button class="btn btn-success btn-lg flight-select-action"
                        hx-get="/purchase/@Model.PurchaseId/tickets"
                        hx-swap="outerHTML"
                        hx-push-url="false"
                        hx-target="#form-purchase">
                    Load tickets
                </button>
            </div>
        }
    </div>
</form>